@model SVPP.Models.NonprofitSkillViewModel
@using Microsoft.AspNetCore.Authorization
@using SVPP.Authorization
@inject IAuthorizationService AuthorizationService
@{
    ViewData["Title"] = "Nonprofits";
}
@using X.PagedList.Mvc.Core
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<div class="table-wrapper">
    <div class="table-title">
        <div class="row">
            <div class="col-sm-6">
                <h1>Nonprofits</h1>
            </div>
        </div>
    </div>
    @if (this.User.IsInRole("Admin"))
    {
    <div class="jumbotron-fluid">
        <form asp-controller="Nonprofits" asp-action="index" method="get">
            <table class="table table-striped table-hover">
                <tbody>
                    <tr>
                        <td>Skill(s):</td>
                        <td>
                            <select class="col-sm-10" asp-for="NonprofitSkill1" asp-items="Model.Skills">
                                <option value="">All</option>
                            </select>
                        </td>
                        <td>
                            <select class="col-sm-10" asp-for="NonprofitSkill2" asp-items="Model.Skills">
                                <option value="">-</option>
                            </select>
                        </td>
                        <td>
                            <select class="col-sm-10" asp-for="NonprofitSkill3" asp-items="Model.Skills">
                                <option value="">-</option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Focus Area(s):
                        </td>
                        <td>
                            <select class="col-sm-10" asp-for="NonprofitFocus1" asp-items="Model.Focus_Areas">
                                <option value="">All</option>
                            </select>
                        </td>
                        <td>
                            <select class="col-sm-10" asp-for="NonprofitFocus2" asp-items="Model.Focus_Areas">
                                <option value="">-</option>
                            </select>
                        </td>
                        <td>
                            <select class="col-sm-10" asp-for="NonprofitFocus3" asp-items="Model.Focus_Areas">
                                <option value="">-</option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Active:
                        </td>
                        <td>
                            @Html.CheckBox("FilterActive", false)
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Organization Name:
                        </td>
                        <td>
                            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                        </td>
                        <td>
                        </td>
                        <td>
                        </td>
                    </tr>
                </tbody>
            </table>
            <p>
                <input class="btn btn-primary btn" type="submit" value="Filter" />
            </p>
        </form>
    </div>
    }
    <table class="table table-striped table-hover">
        @if (this.User.IsInRole("Nonprofit"))
        {

        <thead>
            <tr>
                <th>
                    @Html.ActionLink(@Html.DisplayNameFor(model => model.Nonprofits[0].Organization_Name),
                                    "Index",
                                    new { sortOrder = ViewBag.OrgSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Nonprofits)
                {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Organization_Name)
                </td>

                @if ((await AuthorizationService.AuthorizeAsync(User, @item, Operations.ModelOperations.Update)).Succeeded)
                        {
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |

                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                </td>
                        }
            </tr>
                }
        </tbody>
        }
        else if (this.User.IsInRole("Partner"))
        {
        <thead>
            <tr>
                <th>
                    @Html.ActionLink(@Html.DisplayNameFor(model => model.Nonprofits[0].Organization_Name),
                                     "Index",
                                     new { sortOrder = ViewBag.OrgSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink(@Html.DisplayNameFor(model => model.Nonprofits[0].Contact_Name),
                                    "Index",
                                    new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink(@Html.DisplayNameFor(model => model.Nonprofits[0].Contact_Email),
                                    "Index",
                                    new { sortOrder = ViewBag.EmailSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink("Desired Skills",
                                    "Index",
                                    new { sortOrder = ViewBag.SkillSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Nonprofits)
                {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Organization_Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Contact_Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Contact_Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Skill_1)
                    @if (item.Skill_2 != null)
                            {
                    <br />  @Html.DisplayFor(modelItem => item.Skill_2)
                            }
                    @if (item.Skill_3 != null)
                            {
                    <br />  @Html.DisplayFor(modelItem => item.Skill_3)
                            }
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                </td>

            </tr>
                }
        </tbody>
        }
        else if (this.User.IsInRole("Admin"))
        {
        <thead>
            <tr>
                <th>
                    @Html.ActionLink(@Html.DisplayNameFor(model => model.Nonprofits[0].Organization_Name),
                                     "Index",
                                     new { sortOrder = ViewBag.OrgSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink(@Html.DisplayNameFor(model => model.Nonprofits[0].Contact_Name),
                                    "Index",
                                    new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink(@Html.DisplayNameFor(model => model.Nonprofits[0].Contact_Email),
                                    "Index",
                                    new { sortOrder = ViewBag.EmailSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink("Desired Skills",
                                    "Index",
                                    new { sortOrder = ViewBag.SkillSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Nonprofits)
                {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Organization_Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Contact_Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Contact_Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Skill_1)
                    @if (item.Skill_2 != null)
                            {
                    <br />  @Html.DisplayFor(modelItem => item.Skill_2)
                            }
                    @if (item.Skill_3 != null)
                            {
                    <br />  @Html.DisplayFor(modelItem => item.Skill_3)
                            }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |

                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |

                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
                }
        </tbody>
        }
    </table>
    @if (this.User.IsInRole("Admin") || this.User.IsInRole("Guest") || this.User.IsInRole("Nonprofit"))
    {
    <p>
        <a class="btn btn-primary btn" asp-controller="Nonprofits" asp-action="Create">Add New Nonprofit</a>
    </p>
    } 
    <br />

    @if (Model.Nonprofits.PageCount > 1)
    {
    @Html.PagedListPager(Model.Nonprofits, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    }


    Page @(Model.Nonprofits.PageCount < Model.Nonprofits.PageNumber ? 0 : Model.Nonprofits.PageNumber) of @Model.Nonprofits.PageCount




</div>

